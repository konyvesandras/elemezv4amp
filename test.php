<style>
.kiemelt {
    background-color: rgb(46, 139, 87);
    color: rgb(255, 255, 255);
}
.noun { background-color: #ffd700; }
.verb { background-color: #87ceeb; }
.adjective { background-color: #98fb98; }
.adverb { background-color: #dda0dd; }
.conjunction { background-color: #ff7f50; }
</style>
<?php
// üìÇ Nyelvtani adatok bet√∂lt√©se nyelvtan.json-b√≥l
$nyelvtanAdatok = json_decode(file_get_contents(__DIR__ . '/data/nyelvtan.json'), true) ?? [];
$nyelvtanSzofajok = [];

// üß† Sz√≥fajford√≠t√≥ sz√≥t√°r: angol ‚Üí magyar
$szofajForditas = [
    'noun' => 'f≈ën√©v',
    'verb' => 'ige',
    'adjective' => 'mell√©kn√©v',
    'adverb' => 'hat√°roz√≥sz√≥',
    'pronoun' => 'n√©vm√°s',
    'conjunction' => 'k√∂t≈ësz√≥',
    'particle' => 'partikula',
    'postposition' => 'n√©vut√≥',
    'interjection' => 'indulatsz√≥',
    'sublative' => 'al√°rendel≈ë',
    'instrumental' => 'eszk√∂zhat√°roz√≥',
    'ablative' => 'el√∂lj√°r√≥sz√≥',
    'temporal' => 'id≈ëhat√°roz√≥',
    'translative' => '√°llapothat√°roz√≥',
    'adessive' => 'helyhat√°roz√≥',
    'allative' => 'ir√°nyhat√°roz√≥',
    'elative' => 'kihat√°roz√≥',
    'sandhi-marker' => 'szanszkrit-hat√°rjel'
];

// üîÅ Nyelvtan.json sz√≥fajainak normaliz√°l√°sa √©s ford√≠t√°sa
foreach ($nyelvtanAdatok as $szo => $info) {
    $kulcs = normalizal((string)$szo);
    if ($kulcs !== '' && isset($info['type'])) {
        $angolType = mb_strtolower((string)$info['type'], 'UTF-8');
        $magyarType = $szofajForditas[$angolType] ?? $angolType; // ha nincs ford√≠t√°s, marad eredeti
        $nyelvtanSzofajok[$kulcs] = $angolType;
    }
}


// üìÑ Sz√∂veg bet√∂lt√©se az elemz√©shez
$lines = file(__DIR__ . '/txt/elemzes.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
if ($lines === false) {
    http_response_code(500);
    echo '<p>Hiba: nem siker√ºlt bet√∂lteni az elemzes.txt f√°jlt.</p>';
    exit;
}

$filteredLines = [];
foreach ($lines as $line) {
    
        $visibleLines[] = $line;
}

foreach ($visibleLines as $line) {
    // Szavak √©s sz√≥k√∂z√∂k sz√©tv√°laszt√°sa
    $tokens = preg_split('/(\s+)/u', $line, -1, PREG_SPLIT_DELIM_CAPTURE);
    if ($tokens === false) continue;

    $out = '';
	
    foreach ($tokens as $token) {
		if (isset($nyelvtanSzofajok[$token]))
			echo ' <span class="'.$nyelvtanSzofajok[$token].'">'.$token.'</span> ';
			else ' '.$token;
			}
}			







// üßπ Sz√≥ normaliz√°l√°sa (kisbet≈±s, √≠r√°sjel √©s sz√≥k√∂z n√©lk√ºl, ASCII k√∂zel√≠t√©s)
function normalizal(string $szo): string {
    $szo = mb_strtolower(trim($szo), 'UTF-8');
    $szo = preg_replace('/[.,!?;:"()‚Äû‚Äù‚Äô‚Äò\'`¬¥\-‚Äì‚Äî]/u', '', $szo);
    $szo = preg_replace('/\s+/u', '', $szo);

	// Ha teljesen devanagari, hagyjuk eredetiben
	if (preg_match('/^\p{Devanagari}+$/u', $szo)) {
		return $szo;
	}

	$trans = iconv('UTF-8', 'ASCII//TRANSLIT//IGNORE', $szo);
	return $trans !== false ? $trans : $szo;

}
